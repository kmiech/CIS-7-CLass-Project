/*Seth, George, Chris
Vigenere Ciphere Project*/
#include <iostream>
#include <string>
#include <vector>
using namespace std;

const string TABLE = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz !#$%&()\'\"*+,-./0123456789:;<=>?@[\\]^_`{|}~";


string keymaker(string, string);
int main()
{
	int choice, tmp;
	string user_msg, user_key, encrypt, decrypt, makekey;
	//static string new_key;
	//static string encrypt_msg;
	vector<int> newmsg, newkey, newencrypt;

	cout << "  .____                  __        ____/\\__   ____  __.                   \n";
	cout << "  |    |    ____   ___  |  | __   /   / /_/  |    |/ _|____ __.__.         \n";
	cout << "  |    |   /  _ \\_/ __\\ |  |/ /   \\__/ /_ \\  |      <_/ __ (  |  |     \n";
	cout << "  |    |__(  (_) )  \\___|    (    / / /__) ) |    |  \\  __/\\___  |      \n";
	cout << "  |_______ \\____/ \\___  }__|_ \\  /_/ /__  /  |____|__ \\__  > ____|     \n";
	cout << "          \\/          \\/     \\/    \\/   \\/           \\/  \\/\\/    \n\n";
	cout << "                            A G.C.K. Program                           \n\n\n";


	do
	{
		cout << "\n  ___________________________________________  \n";
		cout << " | Please select from the following options. | \n";
		cout << " |===========================================| \n";
		cout << " | 1)-------- Encrypt a message.             | \n";
		cout << " | 2)-------- Decrypt a message.             | \n";
		cout << " | 3)-------- Exit the program.              | \n";
		cout << " |___________________________________________| \n\n";
		cout << "            ***  Enter choice  ***           ";
		cin >> choice;

		while ((choice < 1) || (choice > 3))
		{
			cout << "  ___________________________________________  \n";
			cout << " |        That is not a valid option.        | \n";
			cout << " |           Please choose again.            | \n";
			cout << " |___________________________________________| \n\n";
			cout << "            ***  Enter choice  ***           ";
			cin >> choice;
		}

		if (choice == 1)
		{
			cin.ignore();
			cout << "  ___________________________________________  \n";
			cout << " |      Enter message to be encrypted:       | \n";
			cout << " |___________________________________________| \n\n --> ";
			getline(cin, user_msg);

			cout << "  ___________________________________________  \n";
			cout << " |      Enter a key word for decryption:     | \n";
			cout << " |___________________________________________| \n\n --> ";
			getline(cin, user_key);

			makekey = keymaker(user_msg, user_key);

			for (int i = 0; i < user_msg.length(); i++)
				for (int t = 0; t < TABLE.length(); t++)
					if (user_msg[i] == TABLE[t])
						newmsg.push_back(t);

			for (int i = 0; i < makekey.length(); i++)
				for (int t = 0; t < TABLE.length(); t++)
					if (makekey[i] == TABLE[t])
						newkey.push_back(t);

			for (int i = 0; i < user_msg.length(); i++)
			{
				tmp = (newmsg[i] + newkey[i]) % 95;
				encrypt.push_back(TABLE[tmp]);
			}

			cout << "\n  Your key for this message is: \n  --> " << makekey << endl;
			cout << "  Your encrypted message is: \n  --> " << encrypt << endl << endl;
		}

		else if (choice == 2)
		{
			for (int i = 0; i < encrypt.length(); i++)
				for (int t = 0; t < TABLE.length(); t++)
					if (TABLE[t] == encrypt[i])
						newencrypt.push_back(t);



			for (int i = 0; i < encrypt.length(); i++)
			{
				tmp = (newencrypt[i] - newkey[i] + 95) % 95;
				decrypt.push_back(TABLE[tmp]);
			}

			cout << "\n  The key for this message is: \n  --> " << makekey << endl;
			cout << "  The decrypted msg is: \n  --> " << decrypt << endl << endl;
		}

		else
		{
			cout << "              ___________________________________________  \n";
			cout << "             |  ******** THANK YOU FOR USING **********  | \n";
			cout << "             |___________________________________________| \n";
			cout << "  .____                  __        ____/\\__   ____  __.                   \n";
			cout << "  |    |    ____   ___  |  | __   /   / /_/  |    |/ _|____ __.__.         \n";
			cout << "  |    |   /  _ \\_/ __\\ |  |/ /   \\__/ /_ \\  |      <_/ __ (  |  |     \n";
			cout << "  |    |__(  (_) )  \\___|    (    / / /__) ) |    |  \\  __/\\___  |      \n";
			cout << "  |_______ \\____/ \\___  }__|_ \\  /_/ /__  /  |____|__ \\__  > ____|     \n";
			cout << "          \\/          \\/     \\/    \\/   \\/           \\/  \\/\\/    \n\n";
			cout << "                            A G.C.K. Program                           \n\n\n";
		}

	} while (choice != 3); //sentinel to end do-while loop

	return 0;
}

string keymaker(string msg, string key)
{
	int tmp = msg.length();

	for (int i = 0; i < msg.length(); i++)
	{
		if (tmp == i)
			i = 0;
		if (key.length() == msg.length())
		{
			break;
		}
		if (key.length() < msg.length())
		{
			key.push_back(key[i]);
		}
		if (key.length() > msg.length())
			key.pop_back();
	}
	return key;
}
